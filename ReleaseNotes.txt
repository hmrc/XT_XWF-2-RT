RELEASE NOTES
=============

July 2020 v0.6 Alpha
The "Time Taken" showing was the total time for the LAST evidence object, which is fine if there is only one. But if multiple evidence objects, the time taken in total needs to be displayed, and not just the time taken for the last evidence object. This version now shows the date and time each evidence object completes, with a cumulative total time displayed at the end
Most (nearly all) variable declarations are now initialised using compiler Defaults (except those that are used itteratively). This will improve memory allocations, avoid potential heap stack issues, especially for managed types (e.g. unicodestring). 
The LoadFile.tsv and ErrorLog.tsv were not being appended to in the case of multiple evidence objects. So if the user requests data from 2 or more evidence objects, it will now append the results from 2nd to 1st, whereas before the results of 1 were being overwritten by the results of 2. 
If the total bytes read is zero, that is now displayed in the messages window, whereas before FormatByteSize returned "bytes bytes" instead of "0 bytes"

July 2020 v0.5 Alpha
Now requires v20.0 Beta 5b or above due to fix applied to XWF_OpenItem when called with 0400 or 0800 flags for files that contain no text
XWF_Close called after 2nd call to text based version of the file, whereas it was not being called in earlier versions
StringlistUTF8's now used instead of TStringList to reduce problems with Unicode chars in output and error log. 
Switched to XT_ProcessItemEx (instead of XT_ProcessItem) as it is specifically designed for data reading vs simply volume snapshot data reading. 
Fixed memory issue that was sometimes cuasing Page Protection 216 Fault by using SetLength after 2nd call to XWF_OpenItem 

June 2020 v0.4 Alpha
The previously added check for OutputLocation.txt was not working, in as much as it was not being found and read. It should work now
The Loadfile.tsv and Errorlog.txt were sometimes being prefixed by the name of the output subfolder due to missing trailing deliminator in the path. This should not happen now
The Error Log will now add files whose size was 0 bytes and skipped, and whose type was totally unknown and skipped

June 2020 v0.3 Alpha
The OutputNativeStream was attempting to be freed outside of a loop, meaning if the loop was false, it was trying to free a stream that did not exist. Fixed
The secondary handle to the file object for textification was not always properly freed from the first native handle before a second handle was initiated. Fixed
An ErrorLog.txt file will now be created and saved containing the ID's of the items that had a type that was considered unsuitable to allow the file to be meaningfully exported
If the OutputLocation.txt file is missing, it will automatically assume default output to c:\temp\RelativityOutput. Before it would just crash out. 
 
May 5th 2020
Compound office files are now unzipped to the users default temp area (C:\Users\UserName\AppData\Local\Temp\XWF_2_RT_Temp) instead of C:\Temp to avoid filesystem permission issues. 
If file handle assignment fails for any given item as either native file or text file, an output error detailing the item name or ID is shown in messages window
The UniqueID, as reported exactly in XWF is now reported fully, instead of just the ItemID within the context of the partition. So previously, item with ID "1234" was reported as "1234" but if it is
in partition 1, the casewide UniqueID is "1-1234", and it is that which is now reported instead of "1234". 

Apr 22, 2020
Initial creation of new branch, v02-Alpha. 
Functionality as before, but with new additions. 
If used with versions of XWF between 18.9 and v19.9, compressed MS Office documents that using the docx format will be temporarily exported, unzipped, and the content of document.xml textified
If used with versions of XWF between 18.9 and v19.9, compressed LibreOffice Writer documents that use the odt format will be temporarily exported, unzipped, and the content of content.xml textified
If used with versions of XWF between 20.0+, the X-Tension utilises the new flag of XWF_OpenItem ("0x0400 = extrain plain text on the fly and open textual data (v20.0 and later, useful for certain 
supported file formats)" that allows a text based handle to the file object. As such, that view is exported as the text file, and the textification routine is skipped. 
PWideChar variables switched to UnicodeString types for better memory management

Depends on the use of XWF v18.9 or above, ideally v20.0 or above. 

Nov 27, 2019
Initial release of v01-Alpha. 
Current functionality : Enables users to select one or more files in the Directory Browser of X-Ways Forensics, and upon execution of the X-Tension (DLL), it will 
1) export the selected files to a NATIVE folder in the output location
2) export the selected files as text to a TEXT folder in the output location
3) Create a TSV loadfile containing the original filename and path, the filenames and paths of their exported locations, and include some metadata such as Modified Date, hash value etc. 

Depends on the use of XWF v18.9 or above