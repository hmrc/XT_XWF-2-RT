RELEASE NOTES
=============

March 2023 Update
FIX - The sorting has an edge case fixed which had caused the application to continue sorting indefinitely.
The family is now grouped to the top level family member that is in the export group. This keeps all documents however far down the chain grouped together, as long as they are all being exported. NOTE - this means that if you export a container such as an email inbox, all of the emails would be grouped in a single family for the inbox which is normally not desirable.

March 2023
Family relationships are maintained in the export. Families will share an identifier and a date to facilitate simple ordering when imported into a suitable tool.
Ordering and ID generation is based on family groups. Exports will be ordered by oldest families first, with any child documents ordered amongst the family by their date following the parent document. The generated IDs will be numbered sequentially from the provided start number through the ordered documents.
Dates are discovered for child items through their file metadata, rather than just file system metadata, if appropriate. File Last Modified date is the preferred option, but Creation Date can be used if Last Modified doesn't exist. As a result, the column in the loadfile is named "Primary Date" as it could be from either field.W
Document IDs are padded for lexicographical sorting. The padding allows for a maximum of 9999999 unique items per ID prefix.
File paths are no longer shortened at any stage. The only sanitisation is to remove newline characters (CR, LF) and Tab characters so that it doesn't interfere with the loadfile separators.
Files written out to disk are named using the Document ID, so they can be easily corroborated with the loadfile.
Empty text files are written for documents where no text could be extracted, so that the file counts match making it easier to validate an export has the correct file resources included with it.

Sept 2020 v0.10 Alpha
Tab seperators added to error log file so that the user can easily import the log into a spreadhseet and have all the Unique ID values seperated into a column, for easy pasting back into the XWF Unique ID filter column
On rare occasions, files with Type Descriptor 'Summary information' and 'type' of 'summary' can pass all the validation checks but they contain an illegal filesystem char of 'white square' (U+25A1, Octal 05, Decimal 5, Hex 0x5, HTML #5). This is now stripped as an invalid char even if the user includes them (either accidentally or for some strange reason otherwise). 
Minor re-phrase of some output messages removing the word "ERROR" for some because such a word indicates a programmatic problem of course, but if the user has just selected an invalid file, then that is not a programmtic error.  
Additional counters added to count files that passed validation checks by XWF but still failed to export or textifiy. These values will show in the messages window at the end if greater than 0 but DO NOT include failed files that were skipped by XWF for failing validation checks. 


Sept 2020 v0.9 Alpha
Upon execution, and in addition of being asked for an output location, the user is now also asked for a : 

1) Control Number prefix name 
2) Control Number prefix starting digit

Combined, these values help ensure that if a user adds items from multiple seizures\exhibits for ingestion into
the SAME Relativity case, the items still have a unique value. Why is the XWF Unique ID not enough? Because the XWF Unique ID works
perfeclty for XWF, but not necessarly for Relativity, because, for each partition, each item as an ID (called the Int ID). 
The partition number is the prefixed to that, with a hyphen, to form a Unique ID such as 0-1234 (for the 1,234th item of partition 0
from SeizureX. And so, in XWF, you may have multiple seizures\exhibits but XWF keeps each item unique with its own ID system and 
seperate from the other evidence objects. Relativity, however, does not. And so if you have two seizures\exhibits in Relativity
you may well have two items with Unique ID "0-1234". So, to get around this, we prepend the Unique ID from XWF with the seizure\exhibit ref
and an incrementor. So, for seizure SMITH001, there may be 2 partitions. On each partition, there may be an item with ID 1234, so on 
Partition 0 you will have 0-1234 and on Partition 1 you will have 1-1234. And so our Control Number for Relativity becomes a 
combination of XWF Unique ID blended with a ref name and a counter. 

Example 1 : SMITH001-1-0-1234 where
SMITH001 : Seizure\Exhibit Ref
-1- : The first item processed by the X-Tension
0-1234 : The XWF Unique ID from Partition 0

Example 2 : SMITH001-1-1-23456 where
SMITH001 : Seizure\Exhibit Ref
-1- : The first item processed by the X-Tension
1-23456 : The XWF Unique ID from Partition 1

Example 3 : SMITH001-100-1-1234 where
SMITH001 : Seizure\Exhibit Ref
-100- : The 100th item processed by the X-Tension
1-1234 : The XWF Unique ID from Partition 1

In addition, the XWF Unique ID is also reported in a seperate column as well, for completeness. 

July 2020 v0.8 Alpha
No longer the need for an OutputLocation.txt file to get a custom path. XWF will ask the user for an output location

July 2020 v0.7 Alpha
Upon completion, the X-Tension will now total how many files were selected, how many exported natively, and how many exported as text
Refinements to how variables are initialised, opting for at point of declaration rather than within the functions executions
Removed functions from export section that do not require exporting for the DLL to function. Safer code execution (as I understand it)
Moved filename truncation to its own function, TruncLongFilename
Ensured ErrorLog.txt was populated by failures to get handle to native files (already does this for text based file nadle failures)

July 2020 v0.6 Alpha
The "Time Taken" showing was the total time for the LAST evidence object, which is fine if there is only one. But if multiple evidence objects, the time taken in total needs to be displayed, and not just the time taken for the last evidence object. This version now shows the date and time each evidence object completes, with a cumulative total time displayed at the end
Most (nearly all) variable declarations are now initialised using compiler Defaults (except those that are used itteratively). This will improve memory allocations, avoid potential heap stack issues, especially for managed types (e.g. unicodestring). 
The LoadFile.tsv and ErrorLog.tsv were not being appended to in the case of multiple evidence objects. So if the user requests data from 2 or more evidence objects, it will now append the results from 2nd to 1st, whereas before the results of 1 were being overwritten by the results of 2. 
If the total bytes read is zero, that is now displayed in the messages window, whereas before FormatByteSize returned "bytes bytes" instead of "0 bytes"

July 2020 v0.5 Alpha
Now requires v20.0 Beta 5b or above due to fix applied to XWF_OpenItem when called with 0400 or 0800 flags for files that contain no text
XWF_Close called after 2nd call to text based version of the file, whereas it was not being called in earlier versions
StringlistUTF8's now used instead of TStringList to reduce problems with Unicode chars in output and error log. 
Switched to XT_ProcessItemEx (instead of XT_ProcessItem) as it is specifically designed for data reading vs simply volume snapshot data reading. 
Fixed memory issue that was sometimes cuasing Page Protection 216 Fault by using SetLength after 2nd call to XWF_OpenItem 

June 2020 v0.4 Alpha
The previously added check for OutputLocation.txt was not working, in as much as it was not being found and read. It should work now
The Loadfile.tsv and Errorlog.txt were sometimes being prefixed by the name of the output subfolder due to missing trailing deliminator in the path. This should not happen now
The Error Log will now add files whose size was 0 bytes and skipped, and whose type was totally unknown and skipped

June 2020 v0.3 Alpha
The OutputNativeStream was attempting to be freed outside of a loop, meaning if the loop was false, it was trying to free a stream that did not exist. Fixed
The secondary handle to the file object for textification was not always properly freed from the first native handle before a second handle was initiated. Fixed
An ErrorLog.txt file will now be created and saved containing the ID's of the items that had a type that was considered unsuitable to allow the file to be meaningfully exported
If the OutputLocation.txt file is missing, it will automatically assume default output to c:\temp\RelativityOutput. Before it would just crash out. 
 
May 5th 2020
Compound office files are now unzipped to the users default temp area (C:\Users\UserName\AppData\Local\Temp\XWF_2_RT_Temp) instead of C:\Temp to avoid filesystem permission issues. 
If file handle assignment fails for any given item as either native file or text file, an output error detailing the item name or ID is shown in messages window
The UniqueID, as reported exactly in XWF is now reported fully, instead of just the ItemID within the context of the partition. So previously, item with ID "1234" was reported as "1234" but if it is
in partition 1, the casewide UniqueID is "1-1234", and it is that which is now reported instead of "1234". 

Apr 22, 2020
Initial creation of new branch, v02-Alpha. 
Functionality as before, but with new additions. 
If used with versions of XWF between 18.9 and v19.9, compressed MS Office documents that using the docx format will be temporarily exported, unzipped, and the content of document.xml textified
If used with versions of XWF between 18.9 and v19.9, compressed LibreOffice Writer documents that use the odt format will be temporarily exported, unzipped, and the content of content.xml textified
If used with versions of XWF between 20.0+, the X-Tension utilises the new flag of XWF_OpenItem ("0x0400 = extrain plain text on the fly and open textual data (v20.0 and later, useful for certain 
supported file formats)" that allows a text based handle to the file object. As such, that view is exported as the text file, and the textification routine is skipped. 
PWideChar variables switched to UnicodeString types for better memory management

Depends on the use of XWF v18.9 or above, ideally v20.0 or above. 

Nov 27, 2019
Initial release of v01-Alpha. 
Current functionality : Enables users to select one or more files in the Directory Browser of X-Ways Forensics, and upon execution of the X-Tension (DLL), it will 
1) export the selected files to a NATIVE folder in the output location
2) export the selected files as text to a TEXT folder in the output location
3) Create a TSV loadfile containing the original filename and path, the filenames and paths of their exported locations, and include some metadata such as Modified Date, hash value etc. 

Depends on the use of XWF v18.9 or above